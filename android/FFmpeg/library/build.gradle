apply plugin: 'com.android.application'

def ffmpeg_path_armeabi = rootDir.absolutePath + "/../../tools/ffmpeg-build/armeabi/output/include"
def ffmpeg_path_armeabi_v7a = rootDir.absolutePath + "/../../tools/ffmpeg-build/armeabi-v7a/output/include"
def ffmpeg_path_x86 = rootDir.absolutePath + "/../../tools/ffmepg-build/x86/output/include"
def sdl_header = rootDir.absolutePath + "/libsdl/src/main/jni/include"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.walnjie.ffmpeg.library"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        cmake {
            abiFilters 'x86'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles.add(file("proguard-rules.pro"))
        }
    }
//    ndk {
//        moduleName = "wlanjie"
//        toolchain = "clang"
//        toolchainVersion = "3.6"
//        stl = "stlport_static"
//        CFlags.add("-Wall")
//        CFlags.add("-I${file("src/main/jni")}".toString())
//        CFlags.add("-I${file("src/main/jni/libyuv")}".toString())
//        CFlags.add("-I${file("src/main/jni/libyuv/include")}".toString())
//        CFlags.add("-I${file("src/main/jni/libyuv/include/libyuv")}".toString())
//        CFlags.add("-I${file(sdl_header)}".toString())
//        CFlags.add("-I${file(ffmpeg_path_armeabi)}".toString())
//        CFlags.add("-I${file(ffmpeg_path_armeabi_v7a)}".toString())
//        CFlags.add("-I${file(ffmpeg_path_x86)}".toString())
//
//        cppFlags.add("-I${file("src/main/jni/libyuv")}".toString())
//        cppFlags.add("-I${file("src/main/jni/libyuv/include")}".toString())
//        cppFlags.add("-I${file("src/main/jni/libyuv/include/libyuv")}".toString())
//        cppFlags.add("-I${file(sdl_header)}".toString())
//
//        ldFlags.add("-L${file("src/main/jniLibs/armeabi")}".toString())
//        ldFlags.add("-L${file("src/main/jniLibs/armeabi-v7a")}".toString())
//        ldFlags.add("-L${file("src/main/jniLibs/x86")}".toString())
//        ldLibs.addAll(["android", "log", "OpenSLES", "GLESv3", "EGL", "ffmpeg"])
//        abiFilters.addAll(["armeabi","armeabi-v7a", "x86"])
//        abiFilters.addAll(["x86"])
//    }

    externalNativeBuild {
        cmake {
            // platformVersion 9
            // toolchain 'clang'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'io.reactivex:rxjava:1.1.5'
}